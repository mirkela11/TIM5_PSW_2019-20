{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/components/home-page-doctor/home-page-doctor.component.html","./src/app/components/home-page-patient/home-page-patient.component.html","./src/app/components/login/login.component.html","./src/app/components/registration/registration.component.html","./node_modules/tslib/tslib.es6.js","./src/app/app-routing.module.ts","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/components/home-page-doctor/home-page-doctor.component.css","./src/app/components/home-page-doctor/home-page-doctor.component.ts","./src/app/components/home-page-patient/home-page-patient.component.css","./src/app/components/home-page-patient/home-page-patient.component.ts","./src/app/components/login/login.component.css","./src/app/components/login/login.component.ts","./src/app/components/registration/registration.component.css","./src/app/components/registration/registration.component.ts","./src/app/material-module.ts","./src/app/model/patient.ts","./src/app/model/patientStatus.ts","./src/app/model/role.ts","./src/app/model/user.ts","./src/app/services/doctor.service.ts","./src/app/services/patient.service.ts","./src/app/services/user-service.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"\\n<mat-sidenav-container class=\\\"sidenav-container\\\">\\n  <mat-sidenav #drawer class=\\\"sidenav\\\" fixedInViewport [attr.role]=\\\"(isHandset$ | async) ? 'dialog' : 'navigation'\\\"\\n               [mode]=\\\"(isHandset$ | async) ? 'over' : 'side'\\\" [opened]=\\\"(isHandset$ | async) === true\\\">\\n    <mat-toolbar color=\\\"accent\\\">Menu</mat-toolbar>\\n      <mat-nav-list *ngIf = \\\"isLoggedIn()\\\">\\n        <a mat-list-item routerLink=\\\"/login\\\">Login</a>\\n        <a mat-list-item routerLink=\\\"/patient/register\\\">Register</a>\\n      </mat-nav-list>\\n\\n      <mat-nav-list *ngIf=\\\"isPatient()\\\">\\n        <a mat-list-item routerLink=\\\"/patient/profile\\\">Profile</a>\\n        <a mat-list-item routerLink=\\\"/patient/medicalRecord\\\">Medical record</a>\\n        <a mat-list-item routerLink=\\\"/patient/medicalHistory\\\">Medical history</a>\\n        <a mat-list-item routerLink=\\\"/patient/clinics\\\">Clinics</a>\\n        <a mat-list-item (click)=\\\"logOut()\\\">Logout</a>\\n      </mat-nav-list>\\n\\n\\n  </mat-sidenav>\\n  <mat-sidenav-content>\\n    <mat-toolbar color = \\\"accent\\\" >\\n      <button type=\\\"button\\\" aria-label=\\\"Toggle sidenav\\\" mat-icon-button (click)=\\\"drawer.toggle()\\\"\\n              >\\n        <mat-icon aria-label=\\\"Side nav toggle icon\\\">menu</mat-icon>\\n      </button>\\n      <span>Clinical Centre System</span>\\n\\n    </mat-toolbar>\\n    <!-- Add Content Here -->\\n    <router-outlet></router-outlet>\\n  </mat-sidenav-content>\\n</mat-sidenav-container>\\n\"","export default \"<p>home-page-doctor works!</p>\\n\"","export default \"<p>home-page-patient works!</p>\\r\\n\"","export default \"<div class=\\\"main-content\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-8 offset-md-2\\\">\\n        <mat-card>\\n          <h3>Login</h3>\\n          <hr>\\n          <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"email\\\">Email</label>\\n              <input type=\\\"email\\\" id=\\\"email\\\" formControlName=\\\"email\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.email.errors }\\\">\\n              <div *ngIf=\\\"submitted && f.email.errors\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"f.email.errors.required\\\">Email is required</div>\\n                <div *ngIf=\\\"f.email.errors.email\\\">Email must be a valid email address</div>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"password\\\">Password</label>\\n              <input type=\\\"password\\\" id=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.password.errors }\\\">\\n              <div *ngIf=\\\"submitted && f.password.errors\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"f.password.errors.required\\\">Password is required</div>\\n                <div *ngIf=\\\"f.password.errors.minlength\\\">Password must be at least 8 characters long</div>\\n                <div *ngIf=\\\"f.password.errors.pattern\\\">Password must contain at least 1 lowercase, 1 uppercase letter and 1 number</div>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <a routerLink=\\\"/patient/register\\\">Don't have an account? Register here.</a>\\n            </div>\\n\\n            <button mat-raised-button color=\\\"primary\\\" class=\\\"pull-right\\\">Login</button>\\n\\n          </form>\\n        </mat-card>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","export default \"<div class=\\\"main-content\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-8 offset-md-2\\\">\\n        <mat-card>\\n          <h3>Patient Registration</h3>\\n          <hr>\\n          <form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"email\\\">Email</label>\\n              <input type=\\\"email\\\" id=\\\"email\\\" formControlName=\\\"email\\\" class=\\\"form-control\\\"\\n                     [ngClass]=\\\"{ 'is-invalid': submitted && registerForm.get('email').errors }\\\">\\n\\n              <div *ngIf=\\\"submitted && registerForm.get('email').errors\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"registerForm.get('email').errors['required']\\\">Email is required</div>\\n                <div *ngIf=\\\"registerForm.get('email').errors['email']\\\">Email must be a valid email address</div>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"password\\\">Password</label>\\n              <input type=\\\"password\\\" id=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-control\\\"\\n                     [ngClass]=\\\"{ 'is-invalid': submitted && registerForm.get('password').errors }\\\">\\n              <div *ngIf=\\\"submitted && registerForm.get('password').errors\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"registerForm.get('password').errors['required']\\\">Password is required</div>\\n                <div *ngIf=\\\"registerForm.get('password').errors['minlength']\\\">Password must be at least 8 characters\\n                  long</div>\\n                <div *ngIf=\\\"registerForm.get('password').errors['pattern']\\\">Password must contain at least 1 lowercase,\\n                  1 uppercase letter\\n                  and 1 number</div>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"name\\\">First Name</label>\\n              <input type=\\\"text\\\" id=\\\"name\\\" formControlName=\\\"name\\\" class=\\\"form-control\\\"\\n                     [ngClass]=\\\"{ 'is-invalid': submitted && registerForm.get('name').errors }\\\" />\\n              <div *ngIf=\\\"submitted && registerForm.get('name').errors\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\" registerForm.get('name').errors['required']\\\">First Name is required</div>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"surname\\\">Last Name</label>\\n              <input type=\\\"text\\\" id=\\\"surname\\\" formControlName=\\\"surname\\\" class=\\\"form-control\\\"\\n                     [ngClass]=\\\"{ 'is-invalid': submitted && registerForm.get('surname').errors }\\\" />\\n              <div *ngIf=\\\"submitted && registerForm.get('surname').errors\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"registerForm.get('surname').errors['required']\\\">Last Name is required</div>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"address\\\">Address</label>\\n              <input type=\\\"text\\\" id=\\\"address\\\" formControlName=\\\"address\\\" class=\\\"form-control\\\"\\n                     [ngClass]=\\\"{ 'is-invalid': submitted && registerForm.get('address').errors }\\\" />\\n              <div *ngIf=\\\"submitted && registerForm.get('address').errors\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"registerForm.get('address').errors['required']\\\">Address is required</div>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"city\\\">City</label>\\n              <input type=\\\"text\\\" id=\\\"city\\\" formControlName=\\\"city\\\" class=\\\"form-control\\\"\\n                     [ngClass]=\\\"{ 'is-invalid': submitted && registerForm.get('city').errors }\\\" />\\n              <div *ngIf=\\\"submitted && registerForm.get('city').errors\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"registerForm.get('city').errors['required']\\\">City is required</div>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"country\\\">Country</label>\\n              <input type=\\\"text\\\" id=\\\"country\\\" formControlName=\\\"country\\\" class=\\\"form-control\\\"\\n                     [ngClass]=\\\"{ 'is-invalid': submitted && registerForm.get('country').errors }\\\" />\\n              <div *ngIf=\\\"submitted && registerForm.get('country').errors\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"registerForm.get('country').errors['required']\\\">Country is required</div>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"number\\\">Phone Number</label>\\n              <input type=\\\"number\\\" id=\\\"number\\\" formControlName=\\\"number\\\" class=\\\"form-control\\\"\\n                     [ngClass]=\\\"{ 'is-invalid': submitted && registerForm.get('number').errors }\\\" />\\n              <div *ngIf=\\\"submitted && registerForm.get('number').errors\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"registerForm.get('number').errors['required']\\\">Phone Number is required</div>\\n                <div *ngIf=\\\"registerForm.get('number').errors['minlength']\\\">A phone number must have at least 9\\n                  digits\\n                </div>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"insuranceID\\\">Health Insurance ID</label>\\n              <input type=\\\"text\\\" id=\\\"insuranceID\\\" formControlName=\\\"insuranceID\\\" class=\\\"form-control\\\"\\n                     [ngClass]=\\\"{ 'is-invalid': submitted &&  registerForm.get('insuranceID').errors }\\\" />\\n              <div *ngIf=\\\"submitted && registerForm.get('insuranceID').errors\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"registerForm.get('insuranceID').errors['required']\\\">Health Insurance ID is required\\n                </div>\\n                <div\\n                  *ngIf=\\\"registerForm.get('insuranceID').errors['minlength'] ||registerForm.get('insuranceID').errors['maxlength']\\\">\\n                  Health\\n                  Insurance ID must contain exactly 13 characters</div>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <a routerLink=\\\"/patient/login\\\">Already have an account? Login here.</a>\\n            </div>\\n\\n            <button mat-raised-button color=\\\"primary\\\" class=\\\"pull-right\\\">Register</button>\\n\\n          </form>\\n        </mat-card>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { RegistrationComponent } from './components/registration/registration.component';\r\nimport {HomePagePatientComponent} from './components/home-page-patient/home-page-patient.component';\r\nimport {HomePageDoctorComponent} from './components/home-page-doctor/home-page-doctor.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LoginComponent,\r\n  },\r\n  {\r\n    path: 'patient/register',\r\n    component: RegistrationComponent,\r\n  },\r\n  {\r\n    path: 'login',\r\n    component: LoginComponent,\r\n  },\r\n  {\r\n    path: 'patient/home',\r\n    component: HomePagePatientComponent,\r\n  },\r\n  {\r\n    path: 'doctor/home',\r\n    component: HomePageDoctorComponent,\r\n  },\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","export default \".sidenav-container {\\r\\n  height: 100%;\\r\\n}\\r\\n\\r\\n.sidenav {\\r\\n  width: 200px;\\r\\n}\\r\\n\\r\\n.mat-nav-list{\\r\\n  background-color: seashell;\\r\\n}\\r\\n\\r\\n.mat-toolbar.mat-primary {\\r\\n  position: -webkit-sticky;\\r\\n  position: sticky;\\r\\n  top: 0;\\r\\n  z-index: 1;\\r\\n}\\r\\n\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSwwQkFBMEI7QUFDNUI7O0FBQ0E7RUFDRSx3QkFBZ0I7RUFBaEIsZ0JBQWdCO0VBQ2hCLE1BQU07RUFDTixVQUFVO0FBQ1oiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5zaWRlbmF2LWNvbnRhaW5lciB7XHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG59XHJcblxyXG4uc2lkZW5hdiB7XHJcbiAgd2lkdGg6IDIwMHB4O1xyXG59XHJcblxyXG4ubWF0LW5hdi1saXN0e1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHNlYXNoZWxsO1xyXG59XHJcbi5tYXQtdG9vbGJhci5tYXQtcHJpbWFyeSB7XHJcbiAgcG9zaXRpb246IHN0aWNreTtcclxuICB0b3A6IDA7XHJcbiAgei1pbmRleDogMTtcclxufVxyXG5cclxuIl19 */\"","\nimport { Component } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\nimport { map, shareReplay } from 'rxjs/operators';\nimport {UserServiceService} from './services/user-service.service';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches),\n      shareReplay()\n    );\n\n  constructor(private breakpointObserver: BreakpointObserver, private userService: UserServiceService) { }\n\n  public isLoggedIn() {\n    return this.userService.isLoggedIn();\n  }\n\n  public isClinicalCentreAdmin() {\n    return this.userService.isClinicalCentreAdmin();\n  }\n\n  public isClinicAdmin() {\n    return this.userService.isClinicalAdmin();\n  }\n\n  public isPatient() {\n    return this.userService.isPatient();\n  }\n\n  public isDoctor() {\n    return this.userService.isDoctor();\n  }\n\n  public isNurse() {\n    return this.userService.isNurse();\n  }\n\n  public logOut() {\n    this.userService.logOut();\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ToastrModule } from 'ngx-toastr';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { MatToolbarModule, MatButtonModule, MatSidenavModule, MatIconModule, MatListModule, MatCardModule, MatFormFieldModule, MatInputModule } from '@angular/material';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { LoginComponent } from './components/login/login.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport {DemoMaterialModule} from './material-module';\nimport { RegistrationComponent } from './components/registration/registration.component';\nimport { HomePagePatientComponent } from './components/home-page-patient/home-page-patient.component';\nimport { HomePageDoctorComponent } from './components/home-page-doctor/home-page-doctor.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n\n    LoginComponent,\n\n    RegistrationComponent,\n\n    HomePagePatientComponent,\n\n    HomePageDoctorComponent,\n\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    ToastrModule.forRoot({\n      timeOut: 2000,\n      positionClass: 'toast-top-right',\n      preventDuplicates: true,\n    }),\n    LayoutModule,\n    ReactiveFormsModule,\n    FormsModule,\n    HttpClientModule,\n    MatNativeDateModule,\n    DemoMaterialModule,\n\n\n  ],\n  entryComponents: [\n\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaG9tZS1wYWdlLWRvY3Rvci9ob21lLXBhZ2UtZG9jdG9yLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home-page-doctor',\n  templateUrl: './home-page-doctor.component.html',\n  styleUrls: ['./home-page-doctor.component.css']\n})\nexport class HomePageDoctorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaG9tZS1wYWdlLXBhdGllbnQvaG9tZS1wYWdlLXBhdGllbnQuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home-page-patient',\r\n  templateUrl: './home-page-patient.component.html',\r\n  styleUrls: ['./home-page-patient.component.css']\r\n})\r\nexport class HomePagePatientComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","export default \".example-full-width {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.main-content {\\r\\n  margin: 20px 0;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBVztBQUNiOztBQUVBO0VBQ0UsY0FBYztBQUNoQiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5leGFtcGxlLWZ1bGwtd2lkdGgge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG4ubWFpbi1jb250ZW50IHtcclxuICBtYXJnaW46IDIwcHggMDtcclxufVxyXG4iXX0= */\"","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {PatientService} from '../../services/patient.service';\nimport {Router} from '@angular/router';\nimport {User} from '../../model/user';\nimport {UserServiceService} from '../../services/user-service.service';\nimport {Role} from '../../model/role';\nimport {DoctorService} from '../../services/doctor.service';\n\nexport class Patient {\n  constructor(\n    public email: string,\n    public password: string\n  ) {}\n}\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  private loginForm: FormGroup;\n  private submitted = false;\n  private user: User;\n  private patient: Patient;\n\n  constructor(\n    private patientService: PatientService,\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private userService: UserServiceService,\n    private doctorService: DoctorService,\n  ) { }\n\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required]\n    });\n  }\n\n  // Convenience getter for easy access to form fields\n  get f() {\n    return this.loginForm.controls;\n  }\n\n  private onSubmit() {\n    this.submitted = true;\n\n    // Stop here if form is invalid\n    if (this.loginForm.invalid) {\n      return;\n    }\n\n    this.patient = new Patient(\n      this.f.email.value,\n      this.f.password.value\n    );\n\n    // alert('SUCCESS!! :-)\\n\\n' + JSON.stringify(this.loginForm.value));\n\n    this.user = this.userService.getUser(this.f.email.value);\n\n    this.attemptPatientLogin();\n  }\n\n  public attemptPatientLogin() {\n    if (this.user.role === Role.PATIENT) {\n      console.log(this.user);\n      this.patientService.loginPatient(this.user).subscribe(\n        data => {\n          console.log(data);\n          if (data !== null) {\n            console.log('Successful logged in');\n            this.router.navigate(['/patient/home']);\n          } else {\n            console.log('Login error');\n          }\n        },\n        error => {\n          console.log(error);\n        }\n      );\n    } else if (this.user.role === Role.DOCTOR) {\n      console.log(this.user);\n      this.doctorService.loginDoctor(this.user).subscribe(\n        data => {\n          console.log(data);\n          if (data !== null) {\n            console.log('Successful logged in');\n            this.router.navigate(['/doctor/home']);\n          } else {\n            console.log('Login error');\n          }\n        },\n        error => {\n          console.log(error);\n        }\n      );\n    }\n  }\n\n}\n","export default \".example-full-width {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.main-content {\\r\\n  padding: 20px 0;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9yZWdpc3RyYXRpb24vcmVnaXN0cmF0aW9uLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXO0FBQ2I7O0FBRUE7RUFDRSxlQUFlO0FBQ2pCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9yZWdpc3RyYXRpb24vcmVnaXN0cmF0aW9uLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZXhhbXBsZS1mdWxsLXdpZHRoIHtcclxuICB3aWR0aDogMTAwJTtcclxufVxyXG5cclxuLm1haW4tY29udGVudCB7XHJcbiAgcGFkZGluZzogMjBweCAwO1xyXG59XHJcbiJdfQ== */\"","import {Component, OnInit} from '@angular/core';\r\nimport {Patient} from '../../model/patient';\r\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {Router} from '@angular/router';\r\nimport {PatientService} from '../../services/patient.service';\r\nimport {PatientStatus} from '../../model/patientStatus';\r\nimport {User} from '../../model/user';\r\nimport {Role} from '../../model/role';\r\nimport {UserServiceService} from '../../services/user-service.service';\r\n\r\n@Component({\r\n  selector: 'app-registration',\r\n  templateUrl: './registration.component.html',\r\n  styleUrls: ['./registration.component.css']\r\n})\r\nexport class RegistrationComponent implements OnInit {\r\n\r\n  registerForm: FormGroup;\r\n  submitted = false;\r\n  patient: Patient;\r\n  user: User;\r\n\r\n  constructor(\r\n    private patientService: PatientService,\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private userService: UserServiceService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.registerForm = this.formBuilder.group({\r\n      email: new FormControl('', [Validators.required, Validators.email]),\r\n      password: new FormControl('', [Validators.required, Validators.minLength(8),\r\n        Validators.pattern('^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9]).{8,}$')]),\r\n      name: new FormControl('', [Validators.required]),\r\n      surname: new FormControl('', [Validators.required]),\r\n      address: new FormControl('', [Validators.required]),\r\n      city: new FormControl('', [Validators.required]),\r\n      country: new FormControl('', [Validators.required]),\r\n      number: new FormControl('', [Validators.required, Validators.minLength(9)]),\r\n      insuranceID: new FormControl('', [Validators.required, Validators.minLength(13), Validators.maxLength(13)]),\r\n    });\r\n  }\r\n\r\n  get f() {\r\n    return this.registerForm.controls;\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    // Stop here if form is invalid\r\n    if (this.registerForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    this.patient = new Patient(\r\n      this.f.email.value,\r\n      this.f.password.value,\r\n      this.f.name.value,\r\n      this.f.surname.value,\r\n      this.f.number.value,\r\n      this.f.address.value,\r\n      this.f.city.value,\r\n      this.f.country.value,\r\n      this.f.insuranceID.value,\r\n      PatientStatus.AWAITING_APPROVAL\r\n    );\r\n\r\n    this.user = new User(this.f.emal.value, this.f.password.value, Role.PATIENT);\r\n\r\n    this.createPatient();\r\n  }\r\n\r\n  private createPatient() {\r\n    this.patientService.newPatient(this.patient).subscribe(\r\n      data => {\r\n        this.userService.addUser(this.user);\r\n        this.patientService.addPatient(this.patient);\r\n        this.router.navigate(['/patient/login']);\r\n      },\r\n      error => {\r\n        alert('Error registration patient');\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { A11yModule } from '@angular/cdk/a11y';\r\nimport { DragDropModule } from '@angular/cdk/drag-drop';\r\nimport { PortalModule } from '@angular/cdk/portal';\r\nimport { ScrollingModule } from '@angular/cdk/scrolling';\r\nimport { CdkStepperModule } from '@angular/cdk/stepper';\r\nimport { CdkTableModule } from '@angular/cdk/table';\r\nimport { CdkTreeModule } from '@angular/cdk/tree';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatTreeModule } from '@angular/material/tree';\r\n\r\n@NgModule({\r\n  exports: [\r\n    A11yModule,\r\n    CdkStepperModule,\r\n    CdkTableModule,\r\n    CdkTreeModule,\r\n    DragDropModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    PortalModule,\r\n    ScrollingModule,\r\n  ]\r\n})\r\nexport class DemoMaterialModule { }\r\n","import {PatientStatus} from './patientStatus';\r\n\r\nexport class Patient {\r\n\r\n  constructor(\r\n\r\n    public email: string,\r\n    public password: string,\r\n    public name: string,\r\n    public surname: string,\r\n    public number: string,\r\n    public address: string,\r\n    public city: string,\r\n    public country: string,\r\n    public insuranceID: string,\r\n    public status: PatientStatus\r\n\r\n  ) {}\r\n}\r\n","\r\nexport enum PatientStatus {\r\n  AWAITING_APPROVAL,\r\n  APPROVED\r\n}\r\n","export enum Role {\r\n\r\n  PATIENT,\r\n  DOCTOR,\r\n  NURSE,\r\n  CLINIC_ADMINISTRATOR,\r\n  CLINICAL_CENTRE_ADMINISTRATOR,\r\n  NONE\r\n}\r\n","import {Role} from './role';\r\n\r\nexport class User {\r\n\r\n  email: string;\r\n  password: string;\r\n  role: Role;\r\n\r\n  constructor(email: string, password: string, role: Role) {\r\n    this.email = email;\r\n    this.password = password;\r\n    this.role = role;\r\n  }\r\n\r\n  public setAll(email: string, password: string, role: Role) {\r\n    this.email = email;\r\n    this.password = password;\r\n    this.role = role;\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\nimport {environment} from '../../environments/environment';\nimport {Doctor} from '../model/doctor';\nimport {HttpClient} from '@angular/common/http';\nimport {UserServiceService} from './user-service.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DoctorService {\n\n  urlDoctor = environment.baseUrl + environment.doctor;\n  listDoctors: Array<Doctor> = new Array<Doctor>();\n  constructor(\n    private http: HttpClient,\n    private userService: UserServiceService\n  ) { }\n\n  public loginDoctor(doctor) {\n    this.userService.setToken(doctor);\n    return this.http.post(environment.baseUrl + '/login', doctor, {responseType: 'text'});\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {environment} from '../../environments/environment';\r\nimport {User} from '../model/user';\r\nimport {Patient} from '../model/patient';\r\nimport {UserServiceService} from './user-service.service';\r\n\r\nexport const API_URL = 'http://localhost:8080';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PatientService {\r\n\r\n  urlPatient = environment.baseUrl + environment.patient;\r\n  listPatients: Array<Patient> = new Array<Patient>();\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private userService: UserServiceService\r\n  ) {}\r\n\r\n  public newPatient(patient) {\r\n    return this.http.post(this.urlPatient + '/register', patient);\r\n  }\r\n\r\n  public loginPatient(patient) {\r\n    this.userService.setToken(patient);\r\n    return this.http.post(environment.baseUrl + '/login', patient, {responseType: 'text'});\r\n  }\r\n\r\n  public addPatient(p: Patient) {\r\n    this.listPatients.push(p);\r\n  }\r\n\r\n  public getPatient(email: string) {\r\n    if ( this.listPatients.length === 0) {\r\n      return;\r\n    }\r\n    for (const u of this.listPatients) {\r\n      if ( u.email === email) {\r\n        return u;\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\nimport {User} from '../model/user';\nimport {Role} from '../model/role';\nimport {Router} from '@angular/router';\nimport {environment} from '../../environments/environment';\nimport {HttpClient} from '@angular/common/http';\n\nexport const TOKEN = 'LoggedInUser';\n\n@Injectable({\n  providedIn: 'root'\n})\n\n\nexport class UserServiceService {\n\n\n  list: Array<User> = new Array<User>();\n  doctor: User;\n  patient: User;\n  user: User = new User('', '', Role.NONE);\n  constructor(private router: Router, private http: HttpClient) {\n\n    this.doctor = new User('doctor@email.com', 'Doctor123', Role.DOCTOR);\n    this.patient = new User('patient@email.com', 'Patient123', Role.PATIENT);\n    this.list.push(this.doctor);\n    this.list.push(this.patient);\n    localStorage.setItem(TOKEN, JSON.stringify(this.user));\n  }\n\n  public addUser(u: User) {\n    if (this.getUser(u.email) === null) {\n      this.list.push(u);\n    }\n  }\n\n  public getUser(email: string) {\n    if ( this.list.length === 0) {\n      return null;\n    }\n    for (const u of this.list) {\n      if ( u.email === email) {\n        return u;\n      }\n    }\n\n    return null;\n  }\n\n  public setToken(user) {\n    localStorage.setItem(TOKEN, JSON.stringify(user));\n    this.user = user;\n  }\n\n  public isLoggedIn() {\n    if (localStorage.getItem(TOKEN) !== null) {\n      console.log(localStorage.getItem(TOKEN));\n      return localStorage.getItem(TOKEN);\n    } else {\n      return null;\n    }\n  }\n\n  public logOut() {\n    this.router.navigate(['/login']);\n    return localStorage.removeItem(TOKEN);\n    // return this.http.post(environment.baseUrl + '/logout', this.user);\n  }\n\n  public isPatient() {\n    if (this.isLoggedIn()) {\n      return this.user.role === Role.PATIENT;\n    }\n  }\n\n  public isDoctor() {\n    if (this.isLoggedIn()) {\n      return this.user.role === Role.DOCTOR;\n    }\n  }\n\n  public isNurse() {\n    if (this.isLoggedIn()) {\n      return this.user.role === Role.NURSE;\n    }\n  }\n\n  public isClinicalAdmin() {\n    if (this.isLoggedIn()) {\n      return this.user.role === Role.CLINIC_ADMINISTRATOR;\n    }\n  }\n\n  public isClinicalCentreAdmin() {\n    if (this.isLoggedIn()) {\n      return this.user.role === Role.CLINICAL_CENTRE_ADMINISTRATOR;\n    }\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  baseUrl: 'http://localhost:8080',\r\n  user: '/user',\r\n  patient: '/patient',\r\n  doctor: '/doctor',\r\n  clinicalCentreAdmin: '/clinical-centre-admin',\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}